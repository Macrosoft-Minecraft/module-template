import proguard.gradle.ProGuardTask

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.0.0'
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    flatDir {
    	dirs 'libs'
    }
  
}

apply plugin: 'java' 		// 
sourceCompatibility = 1.8	// It ensures java 8 as compiler
targetCompatibility = 1.8	//

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    implementation fileTree(include: ['*.jar'], dir: 'libs')

}

task Bezouro(type:Exec) {
    dependsOn build
    group = 'obfuscate'
    doLast {
        println 'OK. Obfuscated with AMS-Obfkit technology. By Bezouro'
    }
    workingDir 'build/libs/'
    commandLine 'java', '-jar', '../../AMS-Obfkit/Runtime/Obfkit-1.0.jar', '--mapFile', '../../AMS-Obfkit/Runtime/Mappings/Minecraft 1.5.2/mcp-notch.srg', '--ref', '../../AMS-Obfkit/Runtime/Ref/Obf/minecraft-1.5.2.jar', '--input', projectName + '.jar' , '--output',  projectName + '-' + apiVersion + '.jar'
}

task proguard(type: ProGuardTask) {
    dependsOn Bezouro
    group = 'obfuscate'
    configuration 'proguard.txt'


    doFirst {
        println 'Obfuscating with proguard'
    }

    injars 'build/libs/' + projectName + '-' + apiVersion + '.jar'
    outjars 'build/libs/' + projectName + '-' + apiVersion + '-Pg.jar'
}

